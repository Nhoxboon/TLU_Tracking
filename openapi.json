{
    "openapi": "3.1.0",
    "info": {
        "title": "Attendance Management System API",
        "description": "A comprehensive API for managing student attendance with Supabase and face recognition",
        "version": "2.0.0"
    },
    "paths": {
        "/auth/login": {
            "post": {
                "tags": [
                    "authentication"
                ],
                "summary": "Login",
                "description": "User login with Supabase authentication.",
                "operationId": "login_auth_login_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserLogin"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Token"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "tags": [
                    "authentication"
                ],
                "summary": "Register",
                "description": "User registration with Supabase.",
                "operationId": "register_auth_register_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "title": "User Data"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "tags": [
                    "authentication"
                ],
                "summary": "Logout",
                "description": "User logout (for completeness).",
                "operationId": "logout_auth_logout_post",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/auth/me": {
            "get": {
                "tags": [
                    "authentication"
                ],
                "summary": "Get Current User",
                "description": "Get current user info (placeholder).",
                "operationId": "get_current_user_auth_me_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/health/": {
            "get": {
                "tags": [
                    "health"
                ],
                "summary": "Health Check",
                "description": "Basic health check endpoint.",
                "operationId": "health_check_health__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/health/status": {
            "get": {
                "tags": [
                    "health"
                ],
                "summary": "Detailed Status",
                "description": "Detailed system status.",
                "operationId": "detailed_status_health_status_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/admin/teachers": {
            "post": {
                "tags": [
                    "admin"
                ],
                "summary": "Create Teacher",
                "description": "Create a new teacher with Supabase auth account.",
                "operationId": "create_teacher_admin_teachers_post",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TeacherCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeacherCreateResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "admin"
                ],
                "summary": "List Teachers",
                "description": "List all teachers with pagination.",
                "operationId": "list_teachers_admin_teachers_get",
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Number of records to skip",
                            "default": 0,
                            "title": "Skip"
                        },
                        "description": "Number of records to skip"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "description": "Number of records to return",
                            "default": 50,
                            "title": "Limit"
                        },
                        "description": "Number of records to return"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/students": {
            "post": {
                "tags": [
                    "admin"
                ],
                "summary": "Create Student",
                "description": "Create a new student with Supabase auth account.",
                "operationId": "create_student_admin_students_post",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StudentCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StudentCreateResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "admin"
                ],
                "summary": "List Students",
                "description": "List all students with pagination and filtering.",
                "operationId": "list_students_admin_students_get",
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Number of records to skip",
                            "default": 0,
                            "title": "Skip"
                        },
                        "description": "Number of records to skip"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "description": "Number of records to return",
                            "default": 50,
                            "title": "Limit"
                        },
                        "description": "Number of records to return"
                    },
                    {
                        "name": "major_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by major",
                            "title": "Major Id"
                        },
                        "description": "Filter by major"
                    },
                    {
                        "name": "cohort_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by cohort",
                            "title": "Cohort Id"
                        },
                        "description": "Filter by cohort"
                    },
                    {
                        "name": "class_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by class",
                            "title": "Class Id"
                        },
                        "description": "Filter by class"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/teachers/{teacher_id}": {
            "get": {
                "tags": [
                    "admin"
                ],
                "summary": "Get Teacher",
                "description": "Get a specific teacher by ID.",
                "operationId": "get_teacher_admin_teachers__teacher_id__get",
                "parameters": [
                    {
                        "name": "teacher_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Teacher Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "admin"
                ],
                "summary": "Update Teacher",
                "description": "Update a teacher's information.",
                "operationId": "update_teacher_admin_teachers__teacher_id__put",
                "parameters": [
                    {
                        "name": "teacher_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Teacher Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "title": "Teacher Data"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "admin"
                ],
                "summary": "Delete Teacher",
                "description": "Delete a teacher and their auth account.",
                "operationId": "delete_teacher_admin_teachers__teacher_id__delete",
                "parameters": [
                    {
                        "name": "teacher_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Teacher Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/students/{student_id}": {
            "get": {
                "tags": [
                    "admin"
                ],
                "summary": "Get Student",
                "description": "Get a specific student by ID.",
                "operationId": "get_student_admin_students__student_id__get",
                "parameters": [
                    {
                        "name": "student_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Student Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "admin"
                ],
                "summary": "Update Student",
                "description": "Update a student's information.",
                "operationId": "update_student_admin_students__student_id__put",
                "parameters": [
                    {
                        "name": "student_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Student Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "title": "Student Data"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "admin"
                ],
                "summary": "Delete Student",
                "description": "Delete a student and their auth account.",
                "operationId": "delete_student_admin_students__student_id__delete",
                "parameters": [
                    {
                        "name": "student_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Student Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/teachers/bulk": {
            "post": {
                "tags": [
                    "admin"
                ],
                "summary": "Bulk Teacher Operation",
                "description": "Perform bulk operations on multiple teachers.",
                "operationId": "bulk_teacher_operation_admin_teachers_bulk_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "title": "Operation Data"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/students/bulk": {
            "post": {
                "tags": [
                    "admin"
                ],
                "summary": "Bulk Student Operation",
                "description": "Perform bulk operations on multiple students.",
                "operationId": "bulk_student_operation_admin_students_bulk_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "title": "Operation Data"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/users": {
            "get": {
                "tags": [
                    "admin"
                ],
                "summary": "List Users",
                "description": "List all users with pagination and filtering.",
                "operationId": "list_users_admin_users_get",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "description": "Page number",
                            "default": 1,
                            "title": "Page"
                        },
                        "description": "Page number"
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "description": "Number of users per page",
                            "default": 50,
                            "title": "Page Size"
                        },
                        "description": "Number of users per page"
                    },
                    {
                        "name": "role",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/components/schemas/UserRole"
                                }
                            ],
                            "description": "Filter by role",
                            "title": "Role"
                        },
                        "description": "Filter by role"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserListResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/users/{user_id}": {
            "get": {
                "tags": [
                    "admin"
                ],
                "summary": "Get User",
                "description": "Get a specific user by ID.",
                "operationId": "get_user_admin_users__user_id__get",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "User Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/stats": {
            "get": {
                "tags": [
                    "admin"
                ],
                "summary": "Get Admin Stats",
                "description": "Get admin dashboard statistics.",
                "operationId": "get_admin_stats_admin_stats_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/subjects/": {
            "get": {
                "tags": [
                    "subjects"
                ],
                "summary": "List Subjects",
                "description": "Get all subjects with pagination and optional search.",
                "operationId": "list_subjects_subjects__get",
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Number of records to skip",
                            "default": 0,
                            "title": "Skip"
                        },
                        "description": "Number of records to skip"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 1000,
                            "minimum": 1,
                            "description": "Number of records to return",
                            "default": 100,
                            "title": "Limit"
                        },
                        "description": "Number of records to return"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Search by name or code",
                            "title": "Search"
                        },
                        "description": "Search by name or code"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "subjects"
                ],
                "summary": "Create Subject",
                "description": "Create a new subject.",
                "operationId": "create_subject_subjects__post",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubjectCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subject"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/subjects/{subject_id}": {
            "get": {
                "tags": [
                    "subjects"
                ],
                "summary": "Get Subject",
                "description": "Get a specific subject by ID.",
                "operationId": "get_subject_subjects__subject_id__get",
                "parameters": [
                    {
                        "name": "subject_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Subject Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subject"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "subjects"
                ],
                "summary": "Update Subject",
                "description": "Update a subject.",
                "operationId": "update_subject_subjects__subject_id__put",
                "parameters": [
                    {
                        "name": "subject_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Subject Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubjectUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subject"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "subjects"
                ],
                "summary": "Delete Subject",
                "description": "Delete a subject.",
                "operationId": "delete_subject_subjects__subject_id__delete",
                "parameters": [
                    {
                        "name": "subject_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Subject Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/subjects/code/{code}": {
            "get": {
                "tags": [
                    "subjects"
                ],
                "summary": "Get Subject By Code",
                "description": "Get a subject by its code.",
                "operationId": "get_subject_by_code_subjects_code__code__get",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Code"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subject"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/subjects/search/": {
            "get": {
                "tags": [
                    "subjects"
                ],
                "summary": "Search Subjects",
                "description": "Search subjects by name or code.",
                "operationId": "search_subjects_subjects_search__get",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Search query",
                            "title": "Q"
                        },
                        "description": "Search query"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "description": "Maximum results",
                            "default": 50,
                            "title": "Limit"
                        },
                        "description": "Maximum results"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Subject"
                                    },
                                    "title": "Response Search Subjects Subjects Search  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/class-students/": {
            "get": {
                "tags": [
                    "class_students"
                ],
                "summary": "List Class Students",
                "description": "List enrollments with optional filters.",
                "operationId": "list_class_students_class_students__get",
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Number of records to skip",
                            "default": 0,
                            "title": "Skip"
                        },
                        "description": "Number of records to skip"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 1000,
                            "minimum": 1,
                            "description": "Number of records to return",
                            "default": 100,
                            "title": "Limit"
                        },
                        "description": "Number of records to return"
                    },
                    {
                        "name": "class_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by class_id",
                            "title": "Class Id"
                        },
                        "description": "Filter by class_id"
                    },
                    {
                        "name": "student_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by student_id",
                            "title": "Student Id"
                        },
                        "description": "Filter by student_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "class_students"
                ],
                "summary": "Create Class Student",
                "description": "Create enrollment; teacher-only.",
                "operationId": "create_class_student_class_students__post",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ClassStudentCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClassStudent"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/class-students/{id}": {
            "get": {
                "tags": [
                    "class_students"
                ],
                "summary": "Get Class Student",
                "operationId": "get_class_student_class_students__id__get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClassStudent"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "class_students"
                ],
                "summary": "Update Class Student",
                "operationId": "update_class_student_class_students__id__put",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ClassStudentUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClassStudent"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "class_students"
                ],
                "summary": "Delete Class Student",
                "operationId": "delete_class_student_class_students__id__delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Id"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/class-students/class/{class_id}": {
            "get": {
                "tags": [
                    "class_students"
                ],
                "summary": "List By Class",
                "operationId": "list_by_class_class_students_class__class_id__get",
                "parameters": [
                    {
                        "name": "class_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Class Id"
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 1000,
                            "minimum": 1,
                            "default": 100,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ClassStudent"
                                    },
                                    "title": "Response List By Class Class Students Class  Class Id  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/class-students/student/{student_id}": {
            "get": {
                "tags": [
                    "class_students"
                ],
                "summary": "List By Student",
                "operationId": "list_by_student_class_students_student__student_id__get",
                "parameters": [
                    {
                        "name": "student_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Student Id"
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 1000,
                            "minimum": 1,
                            "default": 100,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ClassStudent"
                                    },
                                    "title": "Response List By Student Class Students Student  Student Id  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/face-templates/": {
            "get": {
                "tags": [
                    "face_templates"
                ],
                "summary": "List Face Templates",
                "operationId": "list_face_templates_face_templates__get",
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Number of records to skip",
                            "default": 0,
                            "title": "Skip"
                        },
                        "description": "Number of records to skip"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 1000,
                            "minimum": 1,
                            "description": "Number of records to return",
                            "default": 100,
                            "title": "Limit"
                        },
                        "description": "Number of records to return"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "face_templates"
                ],
                "summary": "Create Face Template",
                "operationId": "create_face_template_face_templates__post",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FaceTemplateCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FaceTemplate"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/face-templates/{id}": {
            "get": {
                "tags": [
                    "face_templates"
                ],
                "summary": "Get Face Template",
                "operationId": "get_face_template_face_templates__id__get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FaceTemplate"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "face_templates"
                ],
                "summary": "Update Face Template",
                "operationId": "update_face_template_face_templates__id__put",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FaceTemplateUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FaceTemplate"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "face_templates"
                ],
                "summary": "Delete Face Template",
                "operationId": "delete_face_template_face_templates__id__delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Id"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/face-templates/student/{student_id}": {
            "get": {
                "tags": [
                    "face_templates"
                ],
                "summary": "List By Student",
                "operationId": "list_by_student_face_templates_student__student_id__get",
                "parameters": [
                    {
                        "name": "student_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Student Id"
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 1000,
                            "minimum": 1,
                            "default": 100,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FaceTemplate"
                                    },
                                    "title": "Response List By Student Face Templates Student  Student Id  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sessions/": {
            "get": {
                "tags": [
                    "teaching_sessions"
                ],
                "summary": "List Sessions",
                "operationId": "list_sessions_sessions__get",
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Number of records to skip",
                            "default": 0,
                            "title": "Skip"
                        },
                        "description": "Number of records to skip"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 1000,
                            "minimum": 1,
                            "description": "Number of records to return",
                            "default": 100,
                            "title": "Limit"
                        },
                        "description": "Number of records to return"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "teaching_sessions"
                ],
                "summary": "Create Session",
                "operationId": "create_session_sessions__post",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TeachingSessionCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/app__schemas__teaching_sessions__TeachingSession"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sessions/{id}": {
            "get": {
                "tags": [
                    "teaching_sessions"
                ],
                "summary": "Get Session",
                "operationId": "get_session_sessions__id__get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/app__schemas__teaching_sessions__TeachingSession"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "teaching_sessions"
                ],
                "summary": "Update Session",
                "operationId": "update_session_sessions__id__put",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TeachingSessionUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/app__schemas__teaching_sessions__TeachingSession"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "teaching_sessions"
                ],
                "summary": "Delete Session",
                "operationId": "delete_session_sessions__id__delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Id"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sessions/class/{class_id}": {
            "get": {
                "tags": [
                    "teaching_sessions"
                ],
                "summary": "List By Class",
                "operationId": "list_by_class_sessions_class__class_id__get",
                "parameters": [
                    {
                        "name": "class_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Class Id"
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 1000,
                            "minimum": 1,
                            "default": 100,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/app__schemas__teaching_sessions__TeachingSession"
                                    },
                                    "title": "Response List By Class Sessions Class  Class Id  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/majors/": {
            "get": {
                "tags": [
                    "majors"
                ],
                "summary": "List Majors",
                "operationId": "list_majors_majors__get",
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Number of records to skip",
                            "default": 0,
                            "title": "Skip"
                        },
                        "description": "Number of records to skip"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 1000,
                            "minimum": 1,
                            "description": "Number of records to return",
                            "default": 100,
                            "title": "Limit"
                        },
                        "description": "Number of records to return"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Search by name or code",
                            "title": "Search"
                        },
                        "description": "Search by name or code"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "majors"
                ],
                "summary": "Create Major",
                "operationId": "create_major_majors__post",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MajorCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Major"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/majors/{major_id}": {
            "get": {
                "tags": [
                    "majors"
                ],
                "summary": "Get Major",
                "operationId": "get_major_majors__major_id__get",
                "parameters": [
                    {
                        "name": "major_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Major Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Major"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "majors"
                ],
                "summary": "Update Major",
                "operationId": "update_major_majors__major_id__put",
                "parameters": [
                    {
                        "name": "major_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Major Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MajorUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Major"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "majors"
                ],
                "summary": "Delete Major",
                "operationId": "delete_major_majors__major_id__delete",
                "parameters": [
                    {
                        "name": "major_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Major Id"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cohorts/": {
            "get": {
                "tags": [
                    "cohorts"
                ],
                "summary": "List Cohorts",
                "operationId": "list_cohorts_cohorts__get",
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Number of records to skip",
                            "default": 0,
                            "title": "Skip"
                        },
                        "description": "Number of records to skip"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 1000,
                            "minimum": 1,
                            "description": "Number of records to return",
                            "default": 100,
                            "title": "Limit"
                        },
                        "description": "Number of records to return"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "cohorts"
                ],
                "summary": "Create Cohort",
                "operationId": "create_cohort_cohorts__post",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CohortCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Cohort"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cohorts/{cohort_id}": {
            "get": {
                "tags": [
                    "cohorts"
                ],
                "summary": "Get Cohort",
                "operationId": "get_cohort_cohorts__cohort_id__get",
                "parameters": [
                    {
                        "name": "cohort_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Cohort Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Cohort"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "cohorts"
                ],
                "summary": "Update Cohort",
                "operationId": "update_cohort_cohorts__cohort_id__put",
                "parameters": [
                    {
                        "name": "cohort_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Cohort Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CohortUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Cohort"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "cohorts"
                ],
                "summary": "Delete Cohort",
                "operationId": "delete_cohort_cohorts__cohort_id__delete",
                "parameters": [
                    {
                        "name": "cohort_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Cohort Id"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/classes/": {
            "get": {
                "tags": [
                    "classes"
                ],
                "summary": "List Classes",
                "operationId": "list_classes_classes__get",
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Number of records to skip",
                            "default": 0,
                            "title": "Skip"
                        },
                        "description": "Number of records to skip"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 1000,
                            "minimum": 1,
                            "description": "Number of records to return",
                            "default": 100,
                            "title": "Limit"
                        },
                        "description": "Number of records to return"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Search by name or code",
                            "title": "Search"
                        },
                        "description": "Search by name or code"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "classes"
                ],
                "summary": "Create Class",
                "operationId": "create_class_classes__post",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ClassCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Class"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/classes/{class_id}": {
            "get": {
                "tags": [
                    "classes"
                ],
                "summary": "Get Class",
                "operationId": "get_class_classes__class_id__get",
                "parameters": [
                    {
                        "name": "class_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Class Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Class"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "classes"
                ],
                "summary": "Update Class",
                "operationId": "update_class_classes__class_id__put",
                "parameters": [
                    {
                        "name": "class_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Class Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ClassUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Class"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "classes"
                ],
                "summary": "Delete Class",
                "operationId": "delete_class_classes__class_id__delete",
                "parameters": [
                    {
                        "name": "class_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Class Id"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/classes/teacher/{teacher_id}": {
            "get": {
                "tags": [
                    "classes"
                ],
                "summary": "List By Teacher",
                "operationId": "list_by_teacher_classes_teacher__teacher_id__get",
                "parameters": [
                    {
                        "name": "teacher_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Teacher Id"
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 1000,
                            "minimum": 1,
                            "default": 100,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Class"
                                    },
                                    "title": "Response List By Teacher Classes Teacher  Teacher Id  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/attendances/": {
            "get": {
                "tags": [
                    "attendances"
                ],
                "summary": "List Attendances",
                "operationId": "list_attendances_attendances__get",
                "parameters": [
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Number of records to skip",
                            "default": 0,
                            "title": "Skip"
                        },
                        "description": "Number of records to skip"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 1000,
                            "minimum": 1,
                            "description": "Number of records to return",
                            "default": 100,
                            "title": "Limit"
                        },
                        "description": "Number of records to return"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "attendances"
                ],
                "summary": "Create Attendance",
                "operationId": "create_attendance_attendances__post",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AttendanceCreate"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attendance"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/attendances/{id}": {
            "get": {
                "tags": [
                    "attendances"
                ],
                "summary": "Get Attendance",
                "operationId": "get_attendance_attendances__id__get",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attendance"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "attendances"
                ],
                "summary": "Update Attendance",
                "operationId": "update_attendance_attendances__id__put",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AttendanceUpdate"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attendance"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "attendances"
                ],
                "summary": "Delete Attendance",
                "operationId": "delete_attendance_attendances__id__delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Id"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful Response"
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/attendances/session/{session_id}": {
            "get": {
                "tags": [
                    "attendances"
                ],
                "summary": "List By Session",
                "operationId": "list_by_session_attendances_session__session_id__get",
                "parameters": [
                    {
                        "name": "session_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Session Id"
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 1000,
                            "minimum": 1,
                            "default": 100,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Attendance"
                                    },
                                    "title": "Response List By Session Attendances Session  Session Id  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/attendances/student/{student_id}": {
            "get": {
                "tags": [
                    "attendances"
                ],
                "summary": "List By Student",
                "operationId": "list_by_student_attendances_student__student_id__get",
                "parameters": [
                    {
                        "name": "student_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Student Id"
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 0,
                            "default": 0,
                            "title": "Skip"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 1000,
                            "minimum": 1,
                            "default": 100,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Attendance"
                                    },
                                    "title": "Response List By Student Attendances Student  Student Id  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/": {
            "get": {
                "summary": "Read Root",
                "operationId": "read_root__get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Attendance": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "session_id": {
                        "type": "integer",
                        "title": "Session Id",
                        "description": "Teaching session ID"
                    },
                    "student_id": {
                        "type": "integer",
                        "title": "Student Id",
                        "description": "Student ID"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AttendanceStatus"
                            }
                        ],
                        "description": "Attendance status"
                    },
                    "check_in_time": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Check In Time",
                        "description": "Check-in timestamp"
                    },
                    "check_out_time": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Check Out Time",
                        "description": "Check-out timestamp"
                    },
                    "method": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AttendanceMethod"
                            }
                        ],
                        "description": "Attendance method",
                        "default": "manual"
                    },
                    "location": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 255
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Location",
                        "description": "Check-in location"
                    },
                    "notes": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 500
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Notes",
                        "description": "Attendance notes"
                    },
                    "is_late": {
                        "type": "boolean",
                        "title": "Is Late",
                        "description": "Whether student was late",
                        "default": false
                    },
                    "late_minutes": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Late Minutes",
                        "description": "Minutes late"
                    },
                    "student": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Student"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "session": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/app__schemas__classes__TeachingSession"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "duration_minutes": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Duration Minutes",
                        "description": "Session duration in minutes"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "updated_at",
                    "id",
                    "session_id",
                    "student_id",
                    "status"
                ],
                "title": "Attendance",
                "description": "Attendance response schema."
            },
            "AttendanceCreate": {
                "properties": {
                    "session_id": {
                        "type": "integer",
                        "title": "Session Id",
                        "description": "Teaching session ID"
                    },
                    "student_id": {
                        "type": "integer",
                        "title": "Student Id",
                        "description": "Student ID"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AttendanceStatus"
                            }
                        ],
                        "description": "Attendance status"
                    },
                    "check_in_time": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Check In Time",
                        "description": "Check-in timestamp"
                    },
                    "check_out_time": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Check Out Time",
                        "description": "Check-out timestamp"
                    },
                    "method": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AttendanceMethod"
                            }
                        ],
                        "description": "Attendance method",
                        "default": "manual"
                    },
                    "location": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 255
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Location",
                        "description": "Check-in location"
                    },
                    "notes": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 500
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Notes",
                        "description": "Attendance notes"
                    },
                    "is_late": {
                        "type": "boolean",
                        "title": "Is Late",
                        "description": "Whether student was late",
                        "default": false
                    },
                    "late_minutes": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Late Minutes",
                        "description": "Minutes late"
                    },
                    "auto_detect_late": {
                        "type": "boolean",
                        "title": "Auto Detect Late",
                        "description": "Auto-detect if student is late",
                        "default": true
                    }
                },
                "type": "object",
                "required": [
                    "session_id",
                    "student_id",
                    "status"
                ],
                "title": "AttendanceCreate",
                "description": "Schema for creating attendance record."
            },
            "AttendanceMethod": {
                "type": "string",
                "enum": [
                    "qr_code",
                    "face_recognition",
                    "manual",
                    "bulk_import"
                ],
                "title": "AttendanceMethod",
                "description": "Attendance marking method enumeration."
            },
            "AttendanceStatus": {
                "type": "string",
                "enum": [
                    "present",
                    "absent",
                    "late",
                    "excused",
                    "early_departure"
                ],
                "title": "AttendanceStatus",
                "description": "Attendance status enumeration."
            },
            "AttendanceUpdate": {
                "properties": {
                    "status": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/AttendanceStatus"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "check_in_time": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Check In Time"
                    },
                    "check_out_time": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Check Out Time"
                    },
                    "method": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/AttendanceMethod"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "location": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 255
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Location"
                    },
                    "notes": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 500
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Notes"
                    },
                    "is_late": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Late"
                    },
                    "late_minutes": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "minimum": 0.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Late Minutes"
                    }
                },
                "type": "object",
                "title": "AttendanceUpdate",
                "description": "Schema for updating attendance record."
            },
            "Class": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "class_code": {
                        "type": "string",
                        "maxLength": 50,
                        "minLength": 1,
                        "title": "Class Code",
                        "description": "Unique class code"
                    },
                    "class_name": {
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "title": "Class Name",
                        "description": "Class name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 1000
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description",
                        "description": "Class description"
                    },
                    "subject_id": {
                        "type": "integer",
                        "title": "Subject Id",
                        "description": "Subject ID"
                    },
                    "teacher_id": {
                        "type": "integer",
                        "title": "Teacher Id",
                        "description": "Teacher ID"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ClassStatus"
                            }
                        ],
                        "description": "Class status",
                        "default": "active"
                    },
                    "start_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Start Date",
                        "description": "Class start date"
                    },
                    "end_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "End Date",
                        "description": "Class end date"
                    },
                    "max_students": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "maximum": 1000.0,
                                "minimum": 1.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Max Students",
                        "description": "Maximum students allowed"
                    },
                    "subject": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Subject"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "teacher": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Teacher"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "current_students": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Current Students",
                        "description": "Current student count"
                    },
                    "sessions_count": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Sessions Count",
                        "description": "Number of teaching sessions"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "updated_at",
                    "id",
                    "class_code",
                    "class_name",
                    "subject_id",
                    "teacher_id"
                ],
                "title": "Class",
                "description": "Class response schema."
            },
            "ClassCreate": {
                "properties": {
                    "class_code": {
                        "type": "string",
                        "maxLength": 50,
                        "minLength": 1,
                        "title": "Class Code",
                        "description": "Unique class code"
                    },
                    "class_name": {
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "title": "Class Name",
                        "description": "Class name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 1000
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description",
                        "description": "Class description"
                    },
                    "subject_id": {
                        "type": "integer",
                        "title": "Subject Id",
                        "description": "Subject ID"
                    },
                    "teacher_id": {
                        "type": "integer",
                        "title": "Teacher Id",
                        "description": "Teacher ID"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ClassStatus"
                            }
                        ],
                        "description": "Class status",
                        "default": "active"
                    },
                    "start_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Start Date",
                        "description": "Class start date"
                    },
                    "end_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "End Date",
                        "description": "Class end date"
                    },
                    "max_students": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "maximum": 1000.0,
                                "minimum": 1.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Max Students",
                        "description": "Maximum students allowed"
                    }
                },
                "type": "object",
                "required": [
                    "class_code",
                    "class_name",
                    "subject_id",
                    "teacher_id"
                ],
                "title": "ClassCreate",
                "description": "Schema for creating a class."
            },
            "ClassStatus": {
                "type": "string",
                "enum": [
                    "active",
                    "inactive",
                    "completed",
                    "cancelled"
                ],
                "title": "ClassStatus",
                "description": "Class status enumeration."
            },
            "ClassStudent": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "class_id": {
                        "type": "integer",
                        "title": "Class Id",
                        "description": "Class ID"
                    },
                    "student_id": {
                        "type": "integer",
                        "title": "Student Id",
                        "description": "Student ID"
                    },
                    "enrollment_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Enrollment Date",
                        "description": "Enrollment date"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active",
                        "description": "Enrollment status",
                        "default": true
                    },
                    "notes": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 500
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Notes",
                        "description": "Enrollment notes"
                    },
                    "class_info": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Class"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "student": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Student"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "attendance_rate": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Attendance Rate",
                        "description": "Student attendance percentage"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "updated_at",
                    "id",
                    "class_id",
                    "student_id"
                ],
                "title": "ClassStudent",
                "description": "Class student enrollment response schema."
            },
            "ClassStudentCreate": {
                "properties": {
                    "class_id": {
                        "type": "integer",
                        "title": "Class Id",
                        "description": "Class ID"
                    },
                    "student_id": {
                        "type": "integer",
                        "title": "Student Id",
                        "description": "Student ID"
                    },
                    "enrollment_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Enrollment Date",
                        "description": "Enrollment date"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active",
                        "description": "Enrollment status",
                        "default": true
                    },
                    "notes": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 500
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Notes",
                        "description": "Enrollment notes"
                    }
                },
                "type": "object",
                "required": [
                    "class_id",
                    "student_id"
                ],
                "title": "ClassStudentCreate",
                "description": "Schema for creating class student enrollment."
            },
            "ClassStudentUpdate": {
                "properties": {
                    "enrollment_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Enrollment Date"
                    },
                    "is_active": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Active"
                    },
                    "notes": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 500
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Notes"
                    }
                },
                "type": "object",
                "title": "ClassStudentUpdate",
                "description": "Schema for updating class student enrollment."
            },
            "ClassUpdate": {
                "properties": {
                    "class_code": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 50,
                                "minLength": 1
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Class Code"
                    },
                    "class_name": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 255,
                                "minLength": 1
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Class Name"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 1000
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description"
                    },
                    "subject_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Subject Id"
                    },
                    "teacher_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Teacher Id"
                    },
                    "status": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/ClassStatus"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "start_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Start Date"
                    },
                    "end_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "End Date"
                    },
                    "max_students": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "maximum": 1000.0,
                                "minimum": 1.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Max Students"
                    }
                },
                "type": "object",
                "title": "ClassUpdate",
                "description": "Schema for updating a class."
            },
            "Cohort": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "title": "Name",
                        "description": "Cohort name"
                    },
                    "start_year": {
                        "type": "integer",
                        "maximum": 2100.0,
                        "minimum": 2000.0,
                        "title": "Start Year",
                        "description": "Starting year"
                    },
                    "students_count": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Students Count",
                        "description": "Number of students in this cohort"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "start_year"
                ],
                "title": "Cohort",
                "description": "Cohort response schema."
            },
            "CohortCreate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "title": "Name",
                        "description": "Cohort name"
                    },
                    "start_year": {
                        "type": "integer",
                        "maximum": 2100.0,
                        "minimum": 2000.0,
                        "title": "Start Year",
                        "description": "Starting year"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "start_year"
                ],
                "title": "CohortCreate",
                "description": "Schema for creating a cohort."
            },
            "CohortUpdate": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 255,
                                "minLength": 1
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "start_year": {
                        "anyOf": [
                            {
                                "type": "integer",
                                "maximum": 2100.0,
                                "minimum": 2000.0
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Start Year"
                    }
                },
                "type": "object",
                "title": "CohortUpdate",
                "description": "Schema for updating a cohort."
            },
            "FaceTemplate": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "student_id": {
                        "type": "integer",
                        "title": "Student Id",
                        "description": "Student ID"
                    },
                    "image_path": {
                        "type": "string",
                        "title": "Image Path",
                        "description": "Path to face image in storage"
                    },
                    "face_encoding": {
                        "type": "object",
                        "title": "Face Encoding",
                        "description": "Face encoding JSON payload"
                    },
                    "is_primary": {
                        "type": "boolean",
                        "title": "Is Primary",
                        "description": "Whether this is the primary face template",
                        "default": false
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "updated_at",
                    "id",
                    "student_id",
                    "image_path",
                    "face_encoding"
                ],
                "title": "FaceTemplate",
                "description": "Face template response schema."
            },
            "FaceTemplateCreate": {
                "properties": {
                    "student_id": {
                        "type": "integer",
                        "title": "Student Id",
                        "description": "Student ID"
                    },
                    "image_path": {
                        "type": "string",
                        "title": "Image Path",
                        "description": "Path to face image in storage"
                    },
                    "face_encoding": {
                        "type": "object",
                        "title": "Face Encoding",
                        "description": "Face encoding JSON payload"
                    },
                    "is_primary": {
                        "type": "boolean",
                        "title": "Is Primary",
                        "description": "Whether this is the primary face template",
                        "default": false
                    }
                },
                "type": "object",
                "required": [
                    "student_id",
                    "image_path",
                    "face_encoding"
                ],
                "title": "FaceTemplateCreate",
                "description": "Create face template payload."
            },
            "FaceTemplateUpdate": {
                "properties": {
                    "image_path": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Image Path"
                    },
                    "face_encoding": {
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Face Encoding"
                    },
                    "is_primary": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Primary"
                    }
                },
                "type": "object",
                "title": "FaceTemplateUpdate",
                "description": "Update face template payload."
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "Major": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "title": "Name",
                        "description": "Major name"
                    },
                    "code": {
                        "type": "string",
                        "maxLength": 50,
                        "minLength": 1,
                        "title": "Code",
                        "description": "Unique major code"
                    },
                    "students_count": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Students Count",
                        "description": "Number of students in this major"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "updated_at",
                    "id",
                    "name",
                    "code"
                ],
                "title": "Major",
                "description": "Major response schema."
            },
            "MajorCreate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "title": "Name",
                        "description": "Major name"
                    },
                    "code": {
                        "type": "string",
                        "maxLength": 50,
                        "minLength": 1,
                        "title": "Code",
                        "description": "Unique major code"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "code"
                ],
                "title": "MajorCreate",
                "description": "Schema for creating a major."
            },
            "MajorUpdate": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 255,
                                "minLength": 1
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "code": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 50,
                                "minLength": 1
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Code"
                    }
                },
                "type": "object",
                "title": "MajorUpdate",
                "description": "Schema for updating a major."
            },
            "PaginatedResponse": {
                "properties": {
                    "items": {
                        "items": {},
                        "type": "array",
                        "title": "Items"
                    },
                    "total": {
                        "type": "integer",
                        "title": "Total"
                    },
                    "skip": {
                        "type": "integer",
                        "title": "Skip"
                    },
                    "limit": {
                        "type": "integer",
                        "title": "Limit"
                    },
                    "has_next": {
                        "type": "boolean",
                        "title": "Has Next"
                    },
                    "has_prev": {
                        "type": "boolean",
                        "title": "Has Prev"
                    }
                },
                "type": "object",
                "required": [
                    "items",
                    "total",
                    "skip",
                    "limit",
                    "has_next",
                    "has_prev"
                ],
                "title": "PaginatedResponse",
                "description": "Generic paginated response schema."
            },
            "SessionStatus": {
                "type": "string",
                "enum": [
                    "Open",
                    "Close"
                ],
                "title": "SessionStatus"
            },
            "SessionType-Input": {
                "type": "string",
                "enum": [
                    "theory",
                    "practice",
                    "seminar"
                ],
                "title": "SessionType"
            },
            "Student": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "student_code": {
                        "type": "string",
                        "maxLength": 50,
                        "minLength": 1,
                        "title": "Student Code",
                        "description": "Unique student code"
                    },
                    "full_name": {
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "title": "Full Name",
                        "description": "Student full name"
                    },
                    "phone": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 20
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Phone",
                        "description": "Phone number"
                    },
                    "birth_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Birth Date",
                        "description": "Date of birth"
                    },
                    "major_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Major Id",
                        "description": "Major ID"
                    },
                    "cohort_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Cohort Id",
                        "description": "Cohort ID"
                    },
                    "class_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Class Id",
                        "description": "Direct class reference"
                    },
                    "auth_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Auth Id"
                    },
                    "major": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Major"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "cohort": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Cohort"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "enrollment_count": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Enrollment Count",
                        "description": "Number of enrolled classes"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "updated_at",
                    "id",
                    "student_code",
                    "full_name",
                    "auth_id"
                ],
                "title": "Student",
                "description": "Student response schema."
            },
            "StudentCreateRequest": {
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email",
                        "description": "Student email"
                    },
                    "password": {
                        "type": "string",
                        "maxLength": 128,
                        "minLength": 6,
                        "title": "Password",
                        "description": "Password"
                    },
                    "full_name": {
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "title": "Full Name",
                        "description": "Full name"
                    },
                    "student_code": {
                        "type": "string",
                        "maxLength": 50,
                        "minLength": 1,
                        "title": "Student Code",
                        "description": "Unique student code"
                    },
                    "phone": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 20
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Phone",
                        "description": "Phone number"
                    },
                    "birth_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Birth Date",
                        "description": "Date of birth"
                    },
                    "major_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Major Id",
                        "description": "Major ID"
                    },
                    "cohort_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Cohort Id",
                        "description": "Cohort ID"
                    },
                    "class_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Class Id",
                        "description": "Direct class assignment"
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "password",
                    "full_name",
                    "student_code"
                ],
                "title": "StudentCreateRequest",
                "description": "Schema for creating a new student with account."
            },
            "StudentCreateResponse": {
                "properties": {
                    "message": {
                        "type": "string",
                        "title": "Message"
                    },
                    "auth_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Auth Id"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "student_code": {
                        "type": "string",
                        "title": "Student Code"
                    },
                    "full_name": {
                        "type": "string",
                        "title": "Full Name"
                    },
                    "major_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Major Id"
                    },
                    "cohort_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Cohort Id"
                    },
                    "class_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Class Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    }
                },
                "type": "object",
                "required": [
                    "message",
                    "auth_id",
                    "email",
                    "student_code",
                    "full_name",
                    "created_at"
                ],
                "title": "StudentCreateResponse",
                "description": "Response for student creation."
            },
            "Subject": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "title": "Name",
                        "description": "Subject name"
                    },
                    "code": {
                        "type": "string",
                        "maxLength": 50,
                        "minLength": 1,
                        "title": "Code",
                        "description": "Unique subject code"
                    },
                    "classes_count": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Classes Count",
                        "description": "Number of classes for this subject"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "updated_at",
                    "id",
                    "name",
                    "code"
                ],
                "title": "Subject",
                "description": "Subject response schema."
            },
            "SubjectCreate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "title": "Name",
                        "description": "Subject name"
                    },
                    "code": {
                        "type": "string",
                        "maxLength": 50,
                        "minLength": 1,
                        "title": "Code",
                        "description": "Unique subject code"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "code"
                ],
                "title": "SubjectCreate",
                "description": "Schema for creating a subject."
            },
            "SubjectUpdate": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 255,
                                "minLength": 1
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name"
                    },
                    "code": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 50,
                                "minLength": 1
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Code"
                    }
                },
                "type": "object",
                "title": "SubjectUpdate",
                "description": "Schema for updating a subject."
            },
            "Teacher": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "teacher_code": {
                        "type": "string",
                        "maxLength": 50,
                        "minLength": 1,
                        "title": "Teacher Code",
                        "description": "Unique teacher code"
                    },
                    "full_name": {
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "title": "Full Name",
                        "description": "Teacher full name"
                    },
                    "phone": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 20
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Phone",
                        "description": "Phone number"
                    },
                    "birth_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Birth Date",
                        "description": "Date of birth"
                    },
                    "auth_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Auth Id"
                    },
                    "classes_count": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Classes Count",
                        "description": "Number of classes taught"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "updated_at",
                    "id",
                    "teacher_code",
                    "full_name",
                    "auth_id"
                ],
                "title": "Teacher",
                "description": "Teacher response schema."
            },
            "TeacherCreateRequest": {
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email",
                        "description": "Teacher email"
                    },
                    "password": {
                        "type": "string",
                        "maxLength": 128,
                        "minLength": 6,
                        "title": "Password",
                        "description": "Password"
                    },
                    "full_name": {
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "title": "Full Name",
                        "description": "Full name"
                    },
                    "teacher_code": {
                        "type": "string",
                        "maxLength": 50,
                        "minLength": 1,
                        "title": "Teacher Code",
                        "description": "Unique teacher code"
                    },
                    "phone": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 20
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Phone",
                        "description": "Phone number"
                    },
                    "birth_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Birth Date",
                        "description": "Date of birth"
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "password",
                    "full_name",
                    "teacher_code"
                ],
                "title": "TeacherCreateRequest",
                "description": "Schema for creating a new teacher with account."
            },
            "TeacherCreateResponse": {
                "properties": {
                    "message": {
                        "type": "string",
                        "title": "Message"
                    },
                    "auth_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Auth Id"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "teacher_code": {
                        "type": "string",
                        "title": "Teacher Code"
                    },
                    "full_name": {
                        "type": "string",
                        "title": "Full Name"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    }
                },
                "type": "object",
                "required": [
                    "message",
                    "auth_id",
                    "email",
                    "teacher_code",
                    "full_name",
                    "created_at"
                ],
                "title": "TeacherCreateResponse",
                "description": "Response for teacher creation."
            },
            "TeachingSessionCreate": {
                "properties": {
                    "class_id": {
                        "type": "integer",
                        "title": "Class Id",
                        "description": "Class ID"
                    },
                    "session_date": {
                        "type": "string",
                        "format": "date",
                        "title": "Session Date",
                        "description": "Session date"
                    },
                    "start_time": {
                        "type": "string",
                        "format": "time",
                        "title": "Start Time",
                        "description": "Start time"
                    },
                    "end_time": {
                        "type": "string",
                        "format": "time",
                        "title": "End Time",
                        "description": "End time"
                    },
                    "session_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SessionType-Input"
                            }
                        ],
                        "description": "Session type"
                    },
                    "qr_code": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Qr Code",
                        "description": "QR code for attendance"
                    },
                    "qr_expired_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Qr Expired At",
                        "description": "QR code expiry time"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SessionStatus"
                            }
                        ],
                        "description": "Session status",
                        "default": "Close"
                    }
                },
                "type": "object",
                "required": [
                    "class_id",
                    "session_date",
                    "start_time",
                    "end_time",
                    "session_type"
                ],
                "title": "TeachingSessionCreate"
            },
            "TeachingSessionUpdate": {
                "properties": {
                    "session_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Session Date"
                    },
                    "start_time": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Start Time"
                    },
                    "end_time": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "End Time"
                    },
                    "session_type": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/SessionType-Input"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "qr_code": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Qr Code"
                    },
                    "qr_expired_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Qr Expired At"
                    },
                    "status": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/SessionStatus"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "type": "object",
                "title": "TeachingSessionUpdate"
            },
            "Token": {
                "properties": {
                    "access_token": {
                        "type": "string",
                        "title": "Access Token",
                        "description": "JWT access token"
                    },
                    "token_type": {
                        "type": "string",
                        "title": "Token Type",
                        "description": "Token type",
                        "default": "bearer"
                    },
                    "user_id": {
                        "type": "string",
                        "title": "User Id",
                        "description": "User ID"
                    },
                    "user_type": {
                        "type": "string",
                        "title": "User Type",
                        "description": "User type"
                    },
                    "expires_in": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Expires In",
                        "description": "Token expiry in seconds"
                    }
                },
                "type": "object",
                "required": [
                    "access_token",
                    "user_id",
                    "user_type"
                ],
                "title": "Token",
                "description": "JWT token response schema."
            },
            "UserListResponse": {
                "properties": {
                    "users": {
                        "items": {
                            "$ref": "#/components/schemas/UserResponse"
                        },
                        "type": "array",
                        "title": "Users"
                    },
                    "total": {
                        "type": "integer",
                        "title": "Total"
                    },
                    "page": {
                        "type": "integer",
                        "title": "Page"
                    },
                    "page_size": {
                        "type": "integer",
                        "title": "Page Size"
                    }
                },
                "type": "object",
                "required": [
                    "users",
                    "total",
                    "page",
                    "page_size"
                ],
                "title": "UserListResponse",
                "description": "Response for user listing."
            },
            "UserLogin": {
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email",
                        "description": "User email"
                    },
                    "password": {
                        "type": "string",
                        "minLength": 1,
                        "title": "Password",
                        "description": "User password"
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "password"
                ],
                "title": "UserLogin",
                "description": "User login schema."
            },
            "UserResponse": {
                "properties": {
                    "auth_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Auth Id"
                    },
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "role": {
                        "$ref": "#/components/schemas/UserRole"
                    },
                    "full_name": {
                        "type": "string",
                        "title": "Full Name"
                    },
                    "phone": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Phone"
                    },
                    "birth_date": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Birth Date"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "teacher_code": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Teacher Code"
                    },
                    "student_code": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Student Code"
                    },
                    "major_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Major Id"
                    },
                    "cohort_id": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Cohort Id"
                    }
                },
                "type": "object",
                "required": [
                    "auth_id",
                    "email",
                    "role",
                    "full_name",
                    "created_at"
                ],
                "title": "UserResponse",
                "description": "User response schema."
            },
            "UserRole": {
                "type": "string",
                "enum": [
                    "admin",
                    "teacher",
                    "student"
                ],
                "title": "UserRole",
                "description": "User role enumeration."
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            },
            "app__schemas__classes__SessionType": {
                "type": "string",
                "enum": [
                    "lecture",
                    "practice",
                    "lab",
                    "exam",
                    "review",
                    "other"
                ],
                "title": "SessionType",
                "description": "Teaching session type enumeration."
            },
            "app__schemas__classes__TeachingSession": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "class_id": {
                        "type": "integer",
                        "title": "Class Id",
                        "description": "Class ID"
                    },
                    "session_name": {
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "title": "Session Name",
                        "description": "Session name"
                    },
                    "session_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/app__schemas__classes__SessionType"
                            }
                        ],
                        "description": "Session type",
                        "default": "lecture"
                    },
                    "session_date": {
                        "type": "string",
                        "format": "date",
                        "title": "Session Date",
                        "description": "Session date"
                    },
                    "start_time": {
                        "type": "string",
                        "format": "time",
                        "title": "Start Time",
                        "description": "Session start time"
                    },
                    "end_time": {
                        "type": "string",
                        "format": "time",
                        "title": "End Time",
                        "description": "Session end time"
                    },
                    "location": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 255
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Location",
                        "description": "Session location"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string",
                                "maxLength": 1000
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description",
                        "description": "Session description"
                    },
                    "is_mandatory": {
                        "type": "boolean",
                        "title": "Is Mandatory",
                        "description": "Whether attendance is mandatory",
                        "default": true
                    },
                    "qr_code": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Qr Code",
                        "description": "QR code for attendance"
                    },
                    "qr_expires_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Qr Expires At",
                        "description": "QR code expiration"
                    },
                    "class_info": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Class"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "attendance_count": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Attendance Count",
                        "description": "Number of students attended"
                    },
                    "total_students": {
                        "anyOf": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Total Students",
                        "description": "Total students in class"
                    },
                    "attendance_rate": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Attendance Rate",
                        "description": "Attendance percentage"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "updated_at",
                    "id",
                    "class_id",
                    "session_name",
                    "session_date",
                    "start_time",
                    "end_time"
                ],
                "title": "TeachingSession",
                "description": "Teaching session response schema."
            },
            "app__schemas__teaching_sessions__SessionType": {
                "type": "string",
                "enum": [
                    "theory",
                    "practice",
                    "seminar"
                ],
                "title": "SessionType"
            },
            "app__schemas__teaching_sessions__TeachingSession": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "class_id": {
                        "type": "integer",
                        "title": "Class Id",
                        "description": "Class ID"
                    },
                    "session_date": {
                        "type": "string",
                        "format": "date",
                        "title": "Session Date",
                        "description": "Session date"
                    },
                    "start_time": {
                        "type": "string",
                        "format": "time",
                        "title": "Start Time",
                        "description": "Start time"
                    },
                    "end_time": {
                        "type": "string",
                        "format": "time",
                        "title": "End Time",
                        "description": "End time"
                    },
                    "session_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/app__schemas__teaching_sessions__SessionType"
                            }
                        ],
                        "description": "Session type"
                    },
                    "qr_code": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Qr Code",
                        "description": "QR code for attendance"
                    },
                    "qr_expired_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Qr Expired At",
                        "description": "QR code expiry time"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SessionStatus"
                            }
                        ],
                        "description": "Session status",
                        "default": "Close"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "updated_at",
                    "id",
                    "class_id",
                    "session_date",
                    "start_time",
                    "end_time",
                    "session_type"
                ],
                "title": "TeachingSession"
            }
        }
    }
}